from dataclasses import dataclass
import os


@dataclass(frozen=True)
class ConstantsSpec:
    CLICK_GAP_THRESHOLD: float
    MOVE_GAP_THRESHOLD: float
    SCROLL_GAP_THRESHOLD: float
    KEY_GAP_THRESHOLD: float
    CLICK_TOTAL_THRESHOLD: float
    MOVE_TOTAL_THRESHOLD: float
    SCROLL_TOTAL_THRESHOLD: float
    KEY_TOTAL_THRESHOLD: float
    PADDING_BEFORE: int
    PADDING_AFTER: int
    FINAL_PADDING: int


_ACCURATE = ConstantsSpec(
    CLICK_GAP_THRESHOLD=0.2,
    MOVE_GAP_THRESHOLD=0.5,
    SCROLL_GAP_THRESHOLD=0.5,
    KEY_GAP_THRESHOLD=0.5,
    CLICK_TOTAL_THRESHOLD=0.3,
    MOVE_TOTAL_THRESHOLD=4.0,
    SCROLL_TOTAL_THRESHOLD=3.0,
    KEY_TOTAL_THRESHOLD=6.0,
    PADDING_BEFORE=75,
    PADDING_AFTER=75,
    FINAL_PADDING=100,
)

_ROUGH = ConstantsSpec(
    CLICK_GAP_THRESHOLD=0.8,
    MOVE_GAP_THRESHOLD=2.0,
    SCROLL_GAP_THRESHOLD=2.0,
    KEY_GAP_THRESHOLD=2.0,
    CLICK_TOTAL_THRESHOLD=1.2,
    MOVE_TOTAL_THRESHOLD=16.0,
    SCROLL_TOTAL_THRESHOLD=12.0,
    KEY_TOTAL_THRESHOLD=24.0,
    PADDING_BEFORE=75,
    PADDING_AFTER=75,
    FINAL_PADDING=100,
)

_default = os.getenv("CAPTURE_PRECISION", "accurate").lower()
CONSTANTS = _ROUGH if _default == "rough" else _ACCURATE

MAX_TOTAL_THRESHOLD = max(
    CONSTANTS.CLICK_TOTAL_THRESHOLD,
    CONSTANTS.MOVE_TOTAL_THRESHOLD,
    CONSTANTS.SCROLL_TOTAL_THRESHOLD,
    CONSTANTS.KEY_TOTAL_THRESHOLD,
)


def sync_constants(new_constants: ConstantsSpec):
    _default = os.getenv("CAPTURE_PRECISION", "accurate").lower()
    global CONSTANTS
    CONSTANTS = _ROUGH if _default == "rough" else _ACCURATE
